### GLOBAL FUNCTIONS

# OS-FUNCTIONS

_suspend(){ # Suspend current child process by stopping it
 exec kill -STOP $$
}

# MENU

MENULINE=5; MENUCOL=10
CURPOSY=$MENULINE; CURPOSX=$MENUCOL
MENUCOLOR=$EBOLD$FGWHITE$BGBLUE; MENUSELECTCOLOR=$FGBLACK$BGWHITE
MENUMAXCOL=$MAXCOL

_printmenuentrys(){ # Print menu line
 echo -n "${CSI}$CURPOSY;"$CURPOSX"H$MENUCOLOR" ""
 i=1;
 while [ $i -le $# ]; do
  eval a=\$$i; echo -n $a # Print arguments (dynamically)
  echo -n " "
  i=$(($i + 1))
 done
 echo -n "${CSI}$ERESET"
}

_printmenuline(){ # Print menu line with highlighted entry
 echo -n "${CSI}$CURPOSY;"$CURPOSX"H$MENUCOLOR" ""
 i=1;
 while [ $i -le $# ]; do
  if [ $i == $CHOOSE ]; then  echo -n "${CSI}$MENUSELECTCOLOR"
  else echo -n "${CSI}$MENUCOLOR"
  fi
  eval a=\$$i; echo -n $a # Print arguments $1, $2, ... (dynamically)
  echo -n "${CSI}$MENUCOLOR"; echo -n " "
  i=$(($i + 1))
 done
 echo -n "${CSI}$ERESET"
}

_menu(){ # Choose menu entry and return number with RETVAL
if [ $CHOOSE -gt $# ]; then CHOOSE=$#; fi
 _printmenuline $@
 while :; do _get_key
  case "$_KEY" in
  'LEFT')
   if [ $CHOOSE -le 1 ]; then CHOOSE=$#
   else CHOOSE=$(($CHOOSE - 1))
   fi ;;
  'RIGHT')
   if [ $CHOOSE -ge $# ]; then CHOOSE=1
   else CHOOSE=$(($CHOOSE + 1))
   fi ;;
  'UP') RETVAL=u$CHOOSE; break ;;
  'DOWN') RETVAL=d$CHOOSE; break ;;
  "$OK") RETVAL=o$CHOOSE; break ;;
  "$KO") RETVAL=k0; break ;;
  esac
 _printmenuline $@
 done
}
