### KEY QUERY

_key() { IFS= read -s -n1 _KEY; } # read _KEY

_keys(){ # read _KEYS
 _KEYS=; __KX=
 ESC_END=[a-zA-Z~^\$@$ESC] # ends key sequence
 while :; do
  read -s -n1 -t1 __KX # read
  _KEYS=$_KEYS$__KX
  case $__KX in
   "" | $ESC_END ) break ;;
  esac
 done
}

_esc2key(){ # rename esc-keys
 case $1 in
  "$CSI"A | ${CSI}OA ) _ESC2KEY=UP ;; # cursor keys
  "$CSI"B | ${CSI}0B ) _ESC2KEY=DOWN ;;
  "$CSI"C | ${CSI}OC ) _ESC2KEY=RIGHT ;;
  "$CSI"D | ${CSI}OD ) _ESC2KEY=LEFT ;;
  "$CSI"11~ | "$CSI["A | ${ESC}OP ) _ESC2KEY=F1 ;; # function keys
  "$CSI"12~ | "$CSI["B | ${ESC}OQ ) _ESC2KEY=F2 ;;
  "$CSI"13~ | "$CSI["C | ${ESC}OR ) _ESC2KEY=F3 ;;
  "$CSI"14~ | "$CSI["D | ${ESC}OS ) _ESC2KEY=F4 ;;
  "$CSI"15~ | "$CSI["E ) _ESC2KEY=F5 ;;
  "$CSI"17~ | "$CSI["F ) _ESC2KEY=F6 ;;
  "$CSI"18~ ) _ESC2KEY=F7 ;;
  "$CSI"19~ ) _ESC2KEY=F8 ;;
  "$CSI"20~ ) _ESC2KEY=F9 ;;
  "$CSI"21~ ) _ESC2KEY=F10 ;;
  "$CSI"23~ ) _ESC2KEY=F11 ;;
  "$CSI"24~ ) _ESC2KEY=F12 ;;
  "$CSI"2~ ) _ESC2KEY=INS ;; # ins del home end pup pdn
  "$CSI"3~ ) _ESC2KEY=DEL ;;
  "$CSI"[17]~ | "$CSI"H ) _ESC2KEY=HOME ;;
  "$CSI"[47]~ | "$CSI"F ) _ESC2KEY=END ;;
  "$CSI"5~ ) _ESC2KEY=PGUP ;;
  "$CSI"6~ ) _ESC2KEY=PGDN ;;
  "$ESC""$ESC" ) _ESC2KEY=ESC ;; # esc
  *) _ESC2KEY=UNKNOWN ;; # other
 esac
 [ -n "$2" ] && eval "$2=\$_ESC2KEY"
}

_get_key(){ # get keys and synonyms and store in _KEY
 _key
 case $_KEY in
  "$ESC") _keys; _esc2key "$ESC$_KEYS" _KEY ;;
 esac
 case $_KEY in
  $ESC) _keys; _KEY=$ESC$_KEYS ;;
  "$SPACE" ) _KEY=SPACE ;; # space enter tab backspace
  '' ) _KEY=ENTER ;;
  "$TAB" ) _KEY=TAB ;;
  "$BACKSPACE" ) _KEY=BACKSPACE ;;
 esac
}
